/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 bot.glb
*/

import React, { useRef, useEffect } from 'react'
import { CameraHelper } from 'three'
import {  useFrame } from '@react-three/fiber'
import { useGLTF, useHelper, useAnimations, PerspectiveCamera } from '@react-three/drei'

import { RigidBody, CapsuleCollider, vec3 } from '@react-three/rapier'


export function Bot() {
  // const { scene } = useThree()

  // Load model
  const { nodes, materials, animations } = useGLTF('./models/Bot/bot.glb')

  // Bones
  const head = nodes.mixamorigHead

  // Refs
  const avatar = useRef()
  const pov = useRef()
  const collider = useRef()

  // const velocity = useMemo(() => new Vector3(), [])
  // const direction = useMemo(() => new Vector3(), [])

  // Attach POV camera only once
  if (pov.current) {
    head.add(pov.current)
  }
  
  // Animations
  const { actions } = useAnimations(animations, avatar)

  // Helpers
  useHelper(pov, CameraHelper)

  // Memory data structures
  // const visibleObjects = useRef([])

  const walkFullBody = () => {
    actions.Walking_FullBody.fadeIn(0.5)
    actions.Walking_FullBody.play()
  }

  useEffect(() => {
    walkFullBody()
  })

  useFrame((state, delta) => {
    let position = vec3(collider.current.translation())
    collider.current.setTranslation({x: position.x - 0.01, y: position.y, z: position.z})
  })


  return (
    
      <RigidBody
        ref={collider}
        type="kinematicPosition"
        mass={10}
        colliders={false}
        position={[0, 1, 0]}
        onCollisionEnter={() => {console.log("hit")}}
      >
        <CapsuleCollider args={[0.5, 0.35]} />
        <group ref={avatar} name="Bot" position={[0, -1, 0]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={0.01}>
          <PerspectiveCamera ref={pov} near={15} far={50000} rotation={[0, Math.PI, 0]} makeDefault={false} />
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} skeleton={nodes.Alpha_Joints.skeleton}>
            <meshToonMaterial color="black" />
          </skinnedMesh>
          <skinnedMesh name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} skeleton={nodes.Alpha_Surface.skeleton}>
            <meshToonMaterial color="orange" />
          </skinnedMesh>
        </group>
      </RigidBody>
      
  )
}

useGLTF.preload('./models/Bot/bot.glb')
